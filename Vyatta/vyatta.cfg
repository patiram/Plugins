;; vyatta - Router/FW/WLB/VPN - Networking open source
;; http://www.vyatta.org
;;
;; vyatta.cfg, v 0.14 2011/02/22 hnoguera@openredes.com - http://www.openredes.com

[DEFAULT]
plugin_id=1610

[config]
type=detector
enable=yes

source=log
location=/var/log/vyatta/vyatta.log

# create log file if it does not exists,
# otherwise stop processing this plugin
create_file=false

process=
start=no
stop=no
startup=
shutdown=
exclude_sids=9000,9001,9002,9003,9004,9005,9006

[translation]
A=10
D=20
R=30
HelloReceived=100
Start=110
2-WayReceived=120
1-WayReceived=130
NegotiationDone=140
ExchangeDone=150
BadLSReq=160
LoadingDone=170
AdjOK?=180
SeqNumberMismatch=190
1-Way=200
KillNbr=210
InactivityTimer=220
LLDown=230
Deleted=240
Init=250
ExStart=260
2-Way=270
Exchange=280
Loading=290
Full=300
FAILED=360
ACTIVE=370

[010 - Firewall (PROTO=TCP/UDP)]

#Accept
#Feb  7 09:04:03 vyatta kernel: [834238.323660] [LANin-10-A] IN=eth0 OUT=eth0 SRC=192.168.0.13 DST=192.168.8.19 LEN=48 TOS=0x00 PREC=0x00 TTL=127 ID=4828 DF PROTO=TCP SPT=1133 DPT=5631 WINDOW=65535 RES=0x00 SYN URGP=0 
#Feb  7 09:11:45 vyatta kernel: [834700.043767] [LANin-10-A] IN=eth0 OUT=vtun31 SRC=192.168.0.13 DST=192.168.31.13 LEN=48 TOS=0x00 PREC=0x00 TTL=127 ID=14663 DF PROTO=TCP SPT=1188 DPT=3389 WINDOW=65535 RES=0x00 SYN URGP=0
#Feb  7 09:04:43 vyatta kernel: [834277.875194] [LANlocal-10-A] IN=eth0 OUT= MAC=1c:af:f7:e7:9d:a8:00:1a:92:01:09:8c:08:00 SRC=192.168.0.155 DST=192.168.254.10 LEN=48 TOS=0x00 PREC=0x00 TTL=128 ID=81 DF PROTO=TCP SPT=1036 DPT=1020 WINDOW=65535 RES=0x00 SYN URGP=0 

#Drop
#Jan 26 14:01:34 vyatta kernel: [1284408.054323] [VPNin-9999-D] IN=vtun127 OUT=eth0 SRC=192.168.127.10 DST=192.168.0.190 LEN=106 TOS=0x00 PREC=0x00 TTL=126 ID=57352 PROTO=UDP SPT=1026 DPT=161 LEN=86 
#Oct 26 13:08:13 vyatta kernel: [ 3824.507736] [WANin-2-D] IN=eth1 OUT= MAC=00:0c:29:2d:b5:30:00:17:c5:48:64:80:08:00 SRC=10.10.10.5 DST=192.168.0.210 LEN=40 TOS=0x00 PREC=0x00 TTL=64 ID=0 DF PROTO=TCP SPT=22 DPT=3499 WINDOW=0 RES=0x00 RST URGP=0
#Feb  8 06:36:38 vyatta kernel: [911793.204815] [LANlocal-9999-D] IN=eth0 OUT= MAC=ff:ff:ff:ff:ff:ff:00:22:b0:e3:69:e3:08:00 SRC=0.0.0.0 DST=255.255.255.255 LEN=328 TOS=0x00 PREC=0x00 TTL=64 ID=54382 PROTO=UDP SPT=68 DPT=67 LEN=308 

#Reject
#Feb 10 17:29:37 vyatta kernel: [30443.787059] [LANin-10-R] IN=eth0 OUT=eth1 SRC=10.0.0.16 DST=217.12.10.62 LEN=48 TOS=0x00 PREC=0x00 TTL=127 ID=3635 DF PROTO=TCP SPT=2160 DPT=995 WINDOW=25200 RES=0x00 SYN URGP=0

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>kernel):.*?\[(?P<rule_name>\S+)-(?P<rule_num>\d+)-(?P<sid>\w)]\s+IN=(?P<ifin>\S*) OUT=(?P<ifout>\S*).*? SRC=(?P<src>\S+) DST=(?P<dst>\S+) LEN=(?P<len>\d+).*?TTL=(?P<ttl>\d+).*?PROTO=(?P<proto>\S*) SPT=(?P<spt>\d*) DPT=(?P<dpt>\d*).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid={translate($sid)}
interface=eth0
src_ip={$src}
dst_ip={$dst}
protocol={$proto}
src_port={$spt}
dst_port={$dpt}
userdata1={$service}
userdata2={$rule_name}
userdata3={$rule_num}
userdata4={$ifin}
userdata5={$ifout}
userdata6={$len}
userdata7={$ttl}

[020 - Firewall (PROTO=OTHER)]

#Dec 11 16:50:31 vyatta kernel: [ 936.677646] [wan-local-120-A] IN=eth1 OUT= MAC=00:30:48:de:ce:01:00:25:3c:8d:a6:59:08:00 SRC=75.9.51.236 DST=99.49.XX.XX LEN=136 TOS=0x00 PREC=0x00 TTL=55 ID=8141 PROTO=ESP SPI=0x9f9f37f4
#Feb 10 17:29:35 vyatta kernel: [30442.030652] [LANin-10-R] IN=eth0 OUT=eth1 SRC=10.0.0.16 DST=74.125.230.82 LEN=60 TOS=0x00 PREC=0x00 TTL=127 ID=3591 PROTO=ICMP TYPE=8 CODE=0 ID=512 SEQ=3072
#Oct 13 12:38:14 R2lab kernel: [12693.956530] [PUBlocal-9999-D] IN=eth0 OUT= MAC=20:cf:30:92:bd:ab:00:24:01:60:12:6d:08:00 SRC=10.0.0.20 DST=10.0.0.12 LEN=493 TOS=0x00 PREC=0xC0 TTL=64 ID=41927 PROTO=ICMP TYPE=3 CODE=3 [SRC=10.0.0.12 DST=10.0.0.20 LEN=465 TOS=0x00 PREC=0x00 TTL=64 ID=0 DF PROTO=UDP SPT=30000 DPT=30111 LEN=445 ]
#Feb 13 07:35:14 vyatta kernel: [5175104.885130] [PUBlocal-9999-D] IN=eth2 OUT= MAC=01:00:5e:00:00:01:00:11:3b:06:14:94:08:00 SRC=192.168.1.1 DST=224.0.0.1 LEN=28 TOS=0x00 PREC=0x00 TTL=1 ID=49680 PROTO=2

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>kernel):.*?\[(?P<rule_name>\S+)-(?P<rule_num>\d+)-(?P<sid>\w)]\s+IN=(?P<ifin>\S*) OUT=(?P<ifout>\S*).*?SRC=(?P<src>\S+) DST=(?P<dst>\S+) LEN=(?P<len>\d+).*?TTL=(?P<ttl>\d+).*?PROTO=(?P<proto>\S*).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid={translate($sid)}
interface=eth0
src_ip={$src}
dst_ip={$dst}
protocol={$proto}
userdata1={$service}
userdata2={$rule_name}
userdata3={$rule_num}
userdata4={$ifin}
userdata5={$ifout}
userdata6={$len}
userdata7={$ttl}

[029 - Firewall (generic)]

#These events will be excluded for sending to OSSIM Server

event_type=event
regexp=".* kernel: \[.*?.\d+] \[\S+-\d+-\w].*\n"
plugin_sid=9000

[030 - OpenVPN (site-to-site connection ok)]

#Feb 13 07:49:10 vyatta openvpn[10829]: VERIFY OK: depth=0, /C=ES/ST=XX/L=Xxxx/O=XX/CN=XX_CA/emailAddress=hnoguera@openredes.com

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>openvpn)\[(?P<pid>\d*)]: VERIFY OK: depth=(?P<depth>\d*), /C=(?P<country>\S*)/ST=(?P<state>\S*)/L=(?P<city>\S*)/O=(?P<org>\S*)/CN=(?P<cert>\S*)/emailAddress=(?P<email>\S*).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=40
interface=eth0
userdata1={$service}
userdata2={$pid}
userdata3={$depth}
userdata4={$country}
userdata5={$state}
userdata6={$city}
userdata7={$org}
userdata8={$cert}
userdata9={$email}

[040 - OpenVPN (remote-access connection ok)]

#Feb 14 12:37:56 vyatta openvpn[10873]: XX.XX.47.14:24952 VERIFY OK: depth=0, /C=ES/ST=XX/L=Xxxx/O=XX/CN=XX_CA/emailAddress=hnoguera@openredes.com

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>openvpn)\[(?P<pid>\d*)]: (?P<src>\S+):(?P<spt>\S+) VERIFY OK: depth=(?P<depth>\d*), /C=(?P<country>\S*)/ST=(?P<state>\S*)/L=(?P<city>\S*)/O=(?P<org>\S*)/CN=(?P<cert>\S*)/emailAddress=(?P<email>\S*)\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=50
interface=eth0
src_ip={$src}
src_port={$spt}
userdata1={$service}
userdata2={$pid}
userdata3={$depth}
userdata4={$country}
userdata5={$state}
userdata6={$city}
userdata7={$org}
userdata8={$cert}
userdata9={$email}

[050 - OpenVPN (TLS: key expired)]

#Feb 13 07:49:03 vyatta openvpn[10829]: TLS: tls_process: killed expiring key

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>openvpn)\[(?P<pid>\d*)]: (?P<msg>TLS: tls_process: killed expiring key).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=60
interface=eth0
userdata1={$service}
userdata2={$pid}
userdata3={$msg}

[060 - OpenVPN (Inactivity timeout)]

#Jan 26 06:30:04 vyatta openvpn[23799]: [UNDEF] Inactivity timeout (--ping-restart), restarting

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>openvpn)\[(?P<pid>\d*)]: \[(?P<client>\S+)] (?P<msg>Inactivity timeout \(--ping-restart\)).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=70
interface=eth0
userdata1={$service}
userdata2={$pid}
userdata3={$client}
userdata4={$msg}

[070 - OpenVPN (No route to host)]

#Jan 26 08:31:49 vyatta openvpn[25453]: read UDPv4 [EHOSTUNREACH]: No route to host (code=113)

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>openvpn)\[(?P<pid>\d*)]:.*?(?P<msg>\[EHOSTUNREACH].*?\(code=113\)).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=80
interface=eth0
userdata1={$service}
userdata2={$pid}
userdata3={$msg}

[080 - OpenVPN (RA client disconnected)]

#Feb 14 12:39:20 vyatta openvpn[10873]: raclient/XX.XX.47.14:24952 SIGTERM[soft,remote-exit] received, client-instance exiting

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>openvpn)\[(?P<pid>\d*)]:\s+(?P<client>\S+)/(?P<src>\S+):(?P<spt>\S+) (?P<msg>SIGTERM\[soft,remote-exit].+).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=90
interface=eth0
src_ip={$src}
src_port={$spt}
userdata1={$service}
userdata2={$pid}
userdata3={$client}
userdata4={$msg}

[089 - OpenVPN (generic)]

#These events will be excluded for sending to OSSIM Server

event_type=event
regexp=".* openvpn\[\d*]:.*\n"
plugin_sid=9001

[090 - Quagga OSPF (adjacency changes)]

#With "protocols ospf log-adjacency-changes detail" option commited
#Explanation of the events causing neighbor state changes: http://tools.ietf.org/html/rfc1583#page-75
#Jan 26 19:52:12 vyatta vyatta-ospfd[2220]: AdjChg: Nbr 10.5.0.127 on vtun127:10.6.127.1: Full -> Deleted (InactivityTimer))
#Jan 26 07:47:46 vyatta vyatta-ospfd[2220]: AdjChg: Nbr 10.5.0.116 on vtun116:10.6.116.1: Full -> ExStart (SeqNumberMismatch)
#Jan 26 07:47:47 vyatta vyatta-ospfd[2220]: AdjChg: Nbr 10.5.0.116 on vtun116:10.6.116.1: Loading -> Full (LoadingDone)
#Feb 22 06:29:21 vyatta vyatta-ospfd[4185]: AdjChg: Nbr 10.255.255.253 on eth1:10.0.0.1: Down -> Init (HelloReceived)
#Feb 22 06:29:21 vyatta vyatta-ospfd[4185]: AdjChg: Nbr 10.255.255.253 on eth1:10.0.0.1: Init -> ExStart (2-WayReceived) 
#Feb 22 06:29:21 vyatta vyatta-ospfd[4185]: AdjChg: Nbr 10.255.255.253 on eth1:10.0.0.1: ExStart -> Exchange (NegotiationDone) 
#Feb 22 06:29:21 vyatta vyatta-ospfd[4185]: AdjChg: Nbr 10.255.255.253 on eth1:10.0.0.1: Exchange -> Full (ExchangeDone) 

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>vyatta-ospfd|ospfd)\[(?P<pid>\d*)]: AdjChg: Nbr (?P<nbr_id>\S+) on (?P<ospf_if>\S+):(?P<src>\S+): (?P<msg>(?P<pre_state>\S+) -> (?P<act_state>\S+)\s*\((?P<event>\S+)\)).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid={translate($event)}
interface=eth0
src_ip={$src}
userdata1={$service}
userdata2={$pid}
userdata3={$nbr_id}
userdata4={$ospf_if}
userdata5={$msg}
userdata6={$pre_state}
userdata7={$act_state}

[100 - Quagga OSPF (neighbor state machine changes)]

#The neighbor state machine (RFC1583): http://tools.ietf.org/html/rfc1583#page-76
#Feb 15 12:01:30 vyatta ospfd[2120]: nsm_change_state(10.5.0.43, Loading -> Full): scheduling new router-LSA origination
#Feb 15 12:02:39 vyatta ospfd[2120]: nsm_change_state(10.5.0.77, Full -> ExStart): scheduling new router-LSA origination
#Feb 15 12:02:41 vyatta ospfd[2120]: nsm_change_state(10.5.0.10, Full -> Init): scheduling new router-LSA origination
#Feb 15 12:14:38 vyatta ospfd[2120]: nsm_change_state(10.5.0.152, Full -> Deleted): scheduling new router-LSA origination
#Feb 12 08:01:10 vyatta ospfd[2120]: nsm_change_state(10.5.0.125, Exchange -> Full): scheduling new router-LSA origination

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>vyatta-ospfd|ospfd)\[(?P<pid>\d*)]:\s+nsm_change_state\((?P<nbr_id>\S+), (?P<msg>(?P<pre_state>\S+) -> (?P<act_state>\S+))\):.*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid={translate($act_state)}
interface=eth0
userdata1={$service}
userdata2={$pid}
userdata3={$nbr_id}
userdata4={$msg}
userdata5={$pre_state}
userdata6={$act_state}

[109 - Quagga OSPF (generic)]

#Other events from quagga ospf service (named ospfd since VC6.1-2010.10.16 version)
#These events will be excluded for sending to OSSIM Server

event_type=event
regexp=".* ospfd\[\d*]:.*|.* vyatta-ospfd\[\d*]:.*\n"
plugin_sid=9002

[110 - Quagga zebra (if changes)]

#Feb 15 07:28:18 vyatta zebra[2114]: interface vtun127 index 33364 changed <POINTOPOINT,NOARP,MULTICAST>.
#Feb 15 07:28:20 vyatta zebra[2114]: interface vtun127 index 33365 changed <UP,POINTOPOINT,RUNNING,NOARP,MULTICAST>.

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>vyatta-zebra|zebra)\[(?P<pid>\d*)]:\s+(?P<msg>interface\s*(?P<if>\S+) index (?P<if_index>\d*) changed <(?P<if_atrb>\S+)>).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=310
interface=eth0
userdata1={$service}
userdata2={$pid}
userdata3={$if}
userdata4={$if_index}
userdata5={$if_atrb}
userdata6={$msg}

[120 - Quagga zebra (if deleted)]

#Feb 15 07:28:18 vyatta zebra[2114]: interface vtun127 index 33364 deleted.

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>vyatta-zebra|zebra)\[(?P<pid>\d*)]:\s+(?P<msg>interface\s*(?P<if>\S+) index (?P<if_index>\d*) deleted).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=320
interface=eth0
userdata1={$service}
userdata2={$pid}
userdata3={$if}
userdata4={$if_index}
userdata5={$msg}

[130 - Quagga zebra (if added)]

#Feb 15 07:28:20 vyatta zebra[2114]: interface vtun127 index 33365 <POINTOPOINT,NOARP,MULTICAST> added.

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*)\s+(?P<service>vyatta-zebra|zebra)\[(?P<pid>\d*)]:\s+(?P<msg>interface\s*(?P<if>\S+) index (?P<if_index>\d*) <(?P<if_atrb>\S+)> added).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=330
interface=eth0
userdata1={$service}
userdata2={$pid}
userdata3={$if}
userdata4={$if_index}
userdata5={$if_atrb}
userdata6={$msg}

[139 - Quagga zebra (generic)]

#Other events from quagga zebra service (named vyatta-zebra before VC6.1-2010.10.16 version)
#These events will be excluded for sending to OSSIM Server

event_type=event
regexp=".* vyatta-zebra\[\d*]:.*|.* zebra\[\d*]:.*\n"
plugin_sid=9003

[140 - Vyatta config loaded]

#Oct 26 18:58:59 vyatta /opt/vyatta/sbin/vyatta-load-config.pl: Load config [/opt/vyatta/etc/config/config.boot] by root

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<script>\S+.pl): (?P<msg>Load config \[(?P<config>\S+.boot)] by (?P<user>\S+)).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=340
interface=eth0
filename={$script}
username={$user}
userdata1={$config}
userdata2={$msg}

[150 - Vyatta shutdown]

#Oct 26 19:10:01 vyatta shutdown[9774]: shutting down for system halt

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<event>shutdown)\[(?P<pid>\d*)]: (?P<msg>shutting down.*)\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=350
interface=eth0
userdata1={$event}
userdata2={$pid}
userdata3={$msg}

[160 - WLB if state change]

#Feb  7 12:41:48 vyatta wan_lb: Interface eth2 has changed state to FAILED
#Feb  7 15:05:12 vyatta wan_lb: Interface eth2 has changed state to ACTIVE

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<service>wan_lb): (?P<msg>Interface (?P<if>\S+).*?to (?P<state>\S+)).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid={translate($state)}
interface=eth0
userdata1={$service}
userdata2={$if}
userdata3={$msg}

[169 - WLB generic]

#Other events from wan_lb service
#These events will be excluded for sending to OSSIM Server

event_type=event
regexp=".* wan_lb:.*\n"
plugin_sid=9004

[170 - pmacctd flows generator (memory resources warning)]

#Feb 11 13:02:13 10.0.0.20 pmacctd[4219]: WARN ( default/memory ): Unable to allocate more memory pools, clear stats manually! 

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<service>pmacctd)\[(?P<pid>\d*)]: (?P<msg>WARN.*?default/memory.*?Unable to allocate more.*)\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=380
interface=eth0
userdata1={$service}
userdata2={$pid}
userdata3={$msg}

[179 - pmacctd flows generator (generic)]

#Other events from pmacctd service
#These events will be excluded for sending to OSSIM Server

event_type=event
regexp=".* pmacctd\[\d+]:.*\n"
plugin_sid=9005

[180 - pam_unix (auth failure)]

#Feb  8 12:55:24 R1 sshd[5449]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=vmpccontrol  user=root
#Feb 22 17:13:51 R1 login[4381]: pam_unix(login:auth): authentication failure; logname=LOGIN uid=0 euid=0 tty=tty1 ruser= rhost= 

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<service>sshd|login)\[(?P<pid>\d*)]: (?P<msg>pam_unix\((?P<srv>sshd|login):auth\):.*?failure); logname=(\S*) uid=(?P<uid>\S*) euid=(?P<euid>\S*) tty=(?P<tty>\S*) ruser=(?P<ruser>\S*) rhost=(?P<rhost>\S*)\s+(user=(?P<user>\S*))?\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=390
interface=eth0
dst_ip={resolv($sensor)}
username={$user}
userdata1={$service}
userdata2={$pid}
userdata3={$msg}
userdata4={$uid}
userdata5={$euid}
userdata6={$tty}
userdata7={$ruser}
userdata8={$rhost}

[190 - pam_unix (more than # auth failures)]

#Feb  8 12:55:51 R1 sshd[5449]: PAM 5 more authentication failures; logname= uid=0 euid=0 tty=ssh ruser= rhost=vmpccontrol  user=root
#Feb 22 17:15:09 R1 login[6558]: PAM 2 more authentication failures; logname=LOGIN uid=0 euid=0 tty=tty1 ruser= rhost=  user=root
#Feb 22 17:14:36 R1 login[4381]: PAM 3 more authentication failures; logname=LOGIN uid=0 euid=0 tty=tty1 ruser= rhost= 

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<service>sshd|login)\[(?P<pid>\d*)]: (?P<msg>PAM (?P<max_retries>)\d+.*?failures); logname=(\S*) uid=(?P<uid>\S*) euid=(?P<euid>\S*) tty=(?P<tty>\S*) ruser=(?P<ruser>\S*) rhost=(?P<rhost>\S*)\s+(?P<us>user=(?P<user>\S*)|\s*).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=400
interface=eth0
dst_ip={resolv($sensor)}
username={$user}
userdata1={$service}
userdata2={$pid}
userdata3={$msg}
userdata4={$max_retries}
userdata5={$uid}
userdata6={$euid}
userdata7={$tty}
userdata8={$ruser}
userdata9={$rhost}

[200 - pam_unix (max retries)]

#Feb  8 12:55:51 R1 sshd[5449]: PAM service(sshd) ignoring max retries; 6 > 3
#Feb 22 17:14:36 R1 login[4381]: PAM service(login) ignoring max retries; 4 > 3

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<service>sshd|login)\[(?P<pid>\d*)]: (?P<msg>PAM service\((?P<srv>sshd|login)\).*?; (?P<max_retries>\d+) > (?P<minutes>\d+)).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=410
interface=eth0
dst_ip={resolv($sensor)}
userdata1={$service}
userdata2={$pid}
userdata3={$msg}
userdata4={$max_retries}
userdata5={$minutes}

[210 - pam_unix (user unknown)]

#Feb 21 17:08:30 10.0.0.20 sshd[6460]: pam_unix(sshd:auth): check pass; user unknown
#Feb 22 17:13:51 R1 login[4381]: pam_unix(login:auth): check pass; user unknown

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<service>sshd|login)\[(?P<pid>\d*)]: (?P<msg>pam_unix\((?P<srv>sshd|login):auth\):.*?user unknown).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=420
interface=eth0
dst_ip={resolv($sensor)}
userdata1={$service}
userdata2={$pid}
userdata3={$msg}

[220 - pam_unix (auth failure)]

#Feb 22 17:13:53 R1 login[4381]: FAILED LOGIN (1) on 'tty1' FOR `UNKNOWN', Authentication failure

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<service>sshd|login)\[(?P<pid>\d*)]: (?P<msg>FAILED LOGIN \((?P<attempts>\d*)\) on '(?P<term>\S+)' FOR `(?P<user>\S+)'.*?failure).*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=430
interface=eth0
dst_ip={resolv($sensor)}
username={$user}
userdata1={$service}
userdata2={$pid}
userdata3={$msg}
userdata4={$attempts}
userdata5={$term}

[230 - pam_unix (too many login tries)]

#Feb 22 17:14:36 R1 login[4381]: TOO MANY LOGIN TRIES (5) on 'tty1' FOR `UNKNOWN'

event_type=event
regexp="(?P<date>\S+\s+\d+\s+\d\d:\d\d:\d\d)\s+(?P<sensor>\S*) (?P<service>sshd|login)\[(?P<pid>\d*)]: (?P<msg>TOO MANY LOGIN TRIES \((?P<attempts>\d*)\) on '(?P<term>\S+)' FOR `(?P<user>\S+)').*\n"
date={normalize_date($date)}
sensor={resolv($sensor)}
plugin_sid=440
interface=eth0
dst_ip={resolv($sensor)}
username={$user}
userdata1={$service}
userdata2={$pid}
userdata3={$msg}
userdata4={$attempts}
userdata5={$term}

[239 - pam_unix (generic)]

#Other events from pam_unix service
#These events will be excluded for sending to OSSIM Server

event_type=event
regexp=".* sshd\[\d+]:.*|.* login\[\d+]:.*\n"
plugin_sid=9006


# more logs:
#Oct 26 12:09:17 vyatta kernel: [  290.300001] martian source 10.0.0.100 from 10.0.0.20, on dev eth0
#Oct 26 12:09:17 vyatta kernel: [  290.301087] ll header: ff:ff:ff:ff:ff:ff:00:24:01:60:12:6d:08:06
#Feb 18 18:10:35 secureset ospfd[2355]: can't setsockopt IP_ADD_MEMBERSHIP (fd 8, addr 10.6.67.1, ifindex 22, AllSPFRouters): No buffer space available; perhaps a kernel limit on # of multicast group memberships has been exceeded?
#Feb 17 10:04:52 R1 kernel: [89817.724743] hrtimer: interrupt took 30455870 ns
#Feb 22 17:14:36 R1 login[4381]: pam_mail(login:session): pam_putenv: delete non-existent entry; MAIL

